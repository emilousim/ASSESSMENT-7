XLARRAY = 
insert:  1.1690971000000001 s
append: 3.4695 ms

Results for the tinyArray
insert 44.4 μs
append 125.1 μs

Results for the smallArray
insert 73 μs
append 169.1 μs

Results for the mediumArray
insert 194.6 μs
append 207.9 μs

Results for the largeArray
insert 10.7852 ms
append 582.5 μs

Over the course of the five different tests being run, the arrays are going up in size by adding one zero. Each time a zero is added the insert almost doubles and the append increases in smaller amounts. The amount of run time each array takes is slowly creeping upwards in time because the amount of data that's being processed is increasig, causing the array to take longer to insert/append. Overall, I believe appending is faster because it increases in smaller periods of time, meaning it's performing the function more quickly than the other, inserting.